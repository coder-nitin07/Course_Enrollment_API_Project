// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id              Int           @id @default(autoincrement())
  name            String        
  email           String        @unique
  password        String
  role            Role          @default(STUDENT)
  isActive        Boolean       @default(true)
  courses         Course[]      @relation("TeacherCourses")
  enrollment      Enrollment[]
  teacherProfile  TeacherProfile?
  StudentProfile  StudentProfile?
}

model Qualification{
  id              Int           @id @default(autoincrement())
  name            String        
  level           Int
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  Course Course[]
}

model TeacherProfile{
  id            Int            @id @default(autoincrement())
  user          User           @relation( fields: [ userId ], references: [ id ] )
  userId        Int            @unique
  bio           String
  expertise     String
  experience    String
  linkedin      String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model StudentProfile{
  id                    Int           @id @default(autoincrement())
  user                  User          @relation(fields: [ userId ], references: [ id ])
  userId                Int           @unique
  mobile                String        @unique
  qualification         String
  age                   Int
  profilePicture        String?
  preferredLanguage     String?
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
}

model BlacklistedToken{
  id          Int           @id @default(autoincrement())
  token       String        @unique
  expiresAt   DateTime
  createdAt   DateTime      @default(now())

  @@index([ expiresAt ])
}

model Course {
  id                       Int            @id @default(autoincrement())
  title                    String
  description              String
  minAge                   Int
  qualificationId          Int
  qualification            Qualification  @relation(fields: [ qualificationId ], references: [ id ])
  createdAt                DateTime       @default(now())
  teacherId                Int
  teacher                  User           @relation("TeacherCourses", fields: [teacherId], references: [id])
  enrollments              Enrollment[]
}

model Enrollment {
  id         Int       @id @default(autoincrement())
  studentId  Int
  courseId   Int
  enrolledAt DateTime  @default(now())
  
  student    User      @relation(fields: [studentId], references: [id])
  course     Course    @relation(fields: [courseId], references: [id])

  @@unique([studentId, courseId]) // Prevent duplicate enrollments
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}